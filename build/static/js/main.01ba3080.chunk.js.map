{"version":3,"sources":["logo.svg","BundleChart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BundleChart","props","state","chartStyle","colorin","colorout","colornone","width","radius","this","setState","svg","chart","id","overed","outed","d","link","style","d3","attr","incoming","map","path","text","outgoing","raise","data","require","tree","size","Math","PI","line","curve","beta","y","angle","x","root","bilink","sort","a","b","name","append","selectAll","leaves","join","each","on","call","length","flatMap","leaf","i","o","node","delimiter","Map","forEach","find","has","get","lastIndexOf","set","substring","children","push","imports","parent","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.01ba3080.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from \"react\";\n\nimport * as d3 from 'd3';\n\nclass BundleChart extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            chartStyle : {\n                colorin : \"#00f\"\n                , colorout : \"#f00\"\n                , colornone : \"#ccc\"\n                , width : 954\n                , radius : 954 / 2\n            }\n        };\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            svg : this.chart()\n        });\n    }\n\n    render() {\n        return <div id={\"#\" + this.props.id}></div>\n    }\n\n    async chart() {\n\n        const {chartStyle} = this.state;\n\n\n        const data = require('./data/data');\n\n        const tree = d3.cluster().size([2 * Math.PI, chartStyle.radius - 100]);\n\n        const line = d3.lineRadial().curve(d3.curveBundle.beta(0.85)).radius(d => d.y).angle(d => d.x);\n\n        const root = tree(this.bilink(d3.hierarchy(data).sort((a, b) => d3.ascending(a.data.name, b.data.name))));\n\n        const svg = d3.select(\"body\")\n            .append(\"div\").attr(\"style\", \"width: 50%; margin: 0 auto;\")\n            .append(\"svg\")\n            .attr(\"viewBox\", [-chartStyle.width / 2, -chartStyle.width / 2, chartStyle.width, chartStyle.width]);\n\n        const node = svg.append(\"g\")\n            .attr(\"font-family\", \"sans-serif\")\n            .attr(\"font-size\", 10)\n            .selectAll(\"g\")\n            .data(root.leaves())\n            .join(\"g\")\n            .attr(\"transform\", d => `rotate(${d.x * 180 / Math.PI - 90}) translate(${d.y},0)`)\n            .append(\"text\")\n            .attr(\"dy\", \"0.31em\")\n            .attr(\"x\", d => d.x < Math.PI ? 6 : -6)\n            .attr(\"text-anchor\", d => d.x < Math.PI ? \"start\" : \"end\")\n            .attr(\"transform\", d => d.x >= Math.PI ? \"rotate(180)\" : null)\n            .text(d => d.data.name)\n            .each(function(d) { d.text = this; })\n            .on(\"mouseover\", overed)\n            .on(\"mouseout\", outed)\n            .call(text => text.append(\"title\").text(d => `${this.id(d)}\\n引用${d.outgoing.length} 个项目\\n被${d.incoming.length} 个项目引用`));\n\n        const link = svg.append(\"g\")\n            .attr(\"stroke\", chartStyle.colornone)\n            .attr(\"fill\", \"none\")\n            .selectAll(\"path\")\n            .data(root.leaves().flatMap(leaf => leaf.outgoing))\n            .join(\"path\")\n            .style(\"mix-blend-mode\", \"multiply\")\n            .attr(\"d\", ([i, o]) => line(i.path(o)))\n            .each(function(d) { d.path = this; });\n\n        function overed(d) {\n\n            link.style(\"mix-blend-mode\", null);\n            d3.select(this).attr(\"font-weight\", \"bold\");\n            d3.selectAll(d.incoming.map(d => d.path)).attr(\"stroke\", chartStyle.colorin).raise();\n            d3.selectAll(d.incoming.map(([d]) => d.text)).attr(\"fill\", chartStyle.colorin).attr(\"font-weight\", \"bold\");\n            d3.selectAll(d.outgoing.map(d => d.path)).attr(\"stroke\", chartStyle.colorout).raise();\n            d3.selectAll(d.outgoing.map(([, d]) => d.text)).attr(\"fill\", chartStyle.colorout).attr(\"font-weight\", \"bold\");\n        }\n\n        function outed(d) {\n            link.style(\"mix-blend-mode\", \"multiply\");\n            d3.select(this).attr(\"font-weight\", null);\n            d3.selectAll(d.incoming.map(d => d.path)).attr(\"stroke\", null);\n            d3.selectAll(d.incoming.map(([d]) => d.text)).attr(\"fill\", null).attr(\"font-weight\", null);\n            d3.selectAll(d.outgoing.map(d => d.path)).attr(\"stroke\", null);\n            d3.selectAll(d.outgoing.map(([, d]) => d.text)).attr(\"fill\", null).attr(\"font-weight\", null);\n        }\n\n        return svg.node();\n    }\n\n\n    hierarchy(data, delimiter = \".\") {\n        let root;\n        const map = new Map;\n        data.forEach(function find(data) {\n            const {name} = data;\n            if (map.has(name)) {\n                return map.get(name);\n            }\n            const i = name.lastIndexOf(delimiter);\n            map.set(name, data);\n            if (i >= 0) {\n                find({name: name.substring(0, i), children: []}).children.push(data);\n                data.name = name.substring(i + 1);\n            } else {\n                root = data;\n            }\n            return data;\n        });\n        return root;\n    }\n\n    bilink(root) {\n\n        const map = new Map(root.leaves().map(d => [this.id(d), d]));\n\n        for (const d of root.leaves()) {\n            d.incoming = [];\n            d.outgoing = d.data.imports.map(i => [d, map.get(i)]);\n        }\n        for (const d of root.leaves()) {\n            for (const o of d.outgoing) {\n                o[1].incoming.push(o);\n            }\n        }\n        return root;\n    }\n\n    id(node) {\n        return `${node.parent ? this.id(node.parent) + \".\" : \"\"}${node.data.name}`;\n    }\n\n\n}\n\nexport default BundleChart;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport BundleChart from \"./BundleChart\";\n\nfunction App() {\n  return (\n      <BundleChart></BundleChart>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}